#version 400
layout (points) in;
layout (triangle_strip, max_vertices = 3) out;

in vec3 outputColor[];
out vec3 colorGem;

void main()
{
	float4 vert0 = p_input[0].m_posH + mul( float4(float4(-1.0*m_sizeX, -1.0*m_sizeY, -1.0*m_sizeZ, 0.0)), rWVP); // 0 --- LowerLeftFront
	float4 vert1 = p_input[0].m_posH + mul( float4(float4( 1.0*m_sizeX, -1.0*m_sizeY, -1.0*m_sizeZ, 0.0)), rWVP); // 1 +-- LowerRightFront
	float4 vert2 = p_input[0].m_posH + mul( float4(float4(-1.0*m_sizeX, 1.0*m_sizeY, -1.0*m_sizeZ, 0.0)), rWVP); // 2 -+- UpperLeftFront
	float4 vert3 = p_input[0].m_posH + mul( float4(float4( 1.0*m_sizeX, 1.0*m_sizeY, -1.0*m_sizeZ, 0.0)), rWVP); // 3 ++- UpperRightFront
	float4 vert4 = p_input[0].m_posH + mul( float4(float4(-1.0*m_sizeX, -1.0*m_sizeY, 1.0*m_sizeZ, 0.0)), rWVP); // 4 --+ LowerLeftBack
	float4 vert5 = p_input[0].m_posH + mul( float4(float4( 1.0*m_sizeX, -1.0*m_sizeY, 1.0*m_sizeZ, 0.0)), rWVP); // 5 +-+ LowerRightBack
	float4 vert6 = p_input[0].m_posH + mul( float4(float4(-1.0*m_sizeX, 1.0*m_sizeY, 1.0*m_sizeZ, 0.0)), rWVP); // 6 -++ UpperLeftBack
	float4 vert7 = p_input[0].m_posH + mul( float4(float4( 1.0*m_sizeX, 1.0*m_sizeY, 1.0*m_sizeZ, 0.0)), rWVP); // 7 +++ UpperRightBack
	
	
	GSOutput outVertex = (GSOutput)0;
	
	// Back
	outVertex.m_posH = vert5;
	outVertex.m_tex = float2(1.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert7;
	outVertex.m_tex = float2(1.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert4;
	outVertex.m_tex = float2(0.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert6;
	outVertex.m_tex = float2(0.0f, 0.0f);
	p_outputStream.Append(outVertex);
	p_outputStream.RestartStrip();
	
	// Front
	outVertex.m_posH = vert3;
	outVertex.m_tex = float2(0.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert1;
	outVertex.m_tex = float2(1.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert2;
	outVertex.m_tex = float2(0.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert0;
	outVertex.m_tex = float2(1.0f, 0.0f);
	p_outputStream.Append(outVertex);
	p_outputStream.RestartStrip();
	
	// Top
	outVertex.m_posH = vert7;
	outVertex.m_tex = float2(1.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert3;
	outVertex.m_tex = float2(1.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert6;
	outVertex.m_tex = float2(0.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert2;
	outVertex.m_tex = float2(0.0f, 1.0f);
	p_outputStream.Append(outVertex);
	p_outputStream.RestartStrip();
	
	// Bottom
	outVertex.m_posH = vert1;
	outVertex.m_tex = float2(1.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert5;
	outVertex.m_tex = float2(1.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert0;
	outVertex.m_tex = float2(0.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert4;
	outVertex.m_tex = float2(0.0f, 1.0f);
	p_outputStream.Append(outVertex);
	p_outputStream.RestartStrip();
	
	// Right
	outVertex.m_posH = vert3;
	outVertex.m_tex = float2(0.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert7;
	outVertex.m_tex = float2(1.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert1;
	outVertex.m_tex = float2(0.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert5;
	outVertex.m_tex = float2(1.0f, 1.0f);
	p_outputStream.Append(outVertex);
	p_outputStream.RestartStrip();
	
	// Left
	outVertex.m_posH = vert6;
	outVertex.m_tex = float2(0.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert2;
	outVertex.m_tex = float2(1.0f, 0.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert4;
	outVertex.m_tex = float2(0.0f, 1.0f);
	p_outputStream.Append(outVertex);
	outVertex.m_posH = vert0;
	outVertex.m_tex = float2(1.0f, 1.0f);
	p_outputStream.Append(outVertex);
	p_outputStream.RestartStrip();
		
		
		gl_Position = gl_in[0].gl_Position;
		colorGem = outputColor[0];
		EmitVertex();
		
		gl_Position = vec4(gl_in[0].gl_Position.x + 2, gl_in[0].gl_Position.y, gl_in[0].gl_Position.z, 1.0f);
		colorGem = outputColor[0];
		EmitVertex();
		
		gl_Position = vec4(gl_in[0].gl_Position.x + 1, gl_in[0].gl_Position.y + 2, gl_in[0].gl_Position.z, 1.0f);
		colorGem = outputColor[0];
		EmitVertex();
	EndPrimitive();
}