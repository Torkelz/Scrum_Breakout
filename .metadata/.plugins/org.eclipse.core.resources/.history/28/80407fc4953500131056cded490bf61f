#pragma once

//#pragma comment( lib, "dxguid.lib")
#include "GLUtil.h"
#include "FreeImage.h"

class D3DTexture
{
private:
//	ID3D11Texture2D*			m_pResource;
//	ID3D11ShaderResourceView*	m_pResourceView;
//	ID3D11DeviceContext*        m_pDeviceContext;
//	ID3D11Device*				m_pDevice;

//	ID3D11ShaderResourceView*	createTextureSRV(ID3D11Texture2D* p_pTexture);
public:
	D3DTexture();
	D3DTexture(char* p_pTexturePath, GLuint* p_pTextureID);// p_pDevice, ID3D11DeviceContext* p_pDeviceContext);
	~D3DTexture();

	void release();

//	ID3D11Texture2D*			getResource();
//	ID3D11ShaderResourceView*	getResourceView();
//	void						createTexture(std::wstring* p_pTextureFilename, char* p_pDebugName);
	void			createTextureResource(char* p_texturePath, GLuint* p_pTextureID);
};
